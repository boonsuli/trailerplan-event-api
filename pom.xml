<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.17</version>
    <relativePath/>
  </parent>

  <groupId>com.trailerplan</groupId>
  <artifactId>trailerplan-event-api</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>trailerplan-api-test</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.root.name>trailerplan</project.root.name>
    <java.version>11</java.version>
    <data-container-app_java.dir>data/container/app_java</data-container-app_java.dir>
    <data-container-config.dir>data/container/config</data-container-config.dir>
    <docker.image.name>${project.artifactId}</docker.image.name>
    <environment.name.LOCAL>local</environment.name.LOCAL>
    <environment.name.INT>int</environment.name.INT>
    <environment.name.RCT>rct</environment.name.RCT>
    <logback.version>1.2.3</logback.version>
    <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
    <maven-docker-spotify.version>1.4.13</maven-docker-spotify.version>
  </properties>

  <profiles>
    <profile>
      <id>local</id>
      <properties>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>env.BUILD_ENV</name>
          <value>${environment.name.LOCAL}</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy
                            file="${project.basedir}/src/main/resources/application-local.properties"
                            tofile="${project.build.directory}/classes/application.properties"
                    />
                    <copy
                            file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-local"
                            tofile="${project.build.directory}/Dockerfile"
                    />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>int</id>
      <properties>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.BUILD_ENV</name>
          <value>${environment.name.INT}</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy
                            file="${project.basedir}/src/main/resources/application-int.properties"
                            tofile="${project.build.directory}/classes/application.properties"
                    />
                    <copy
                            file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-int"
                            tofile="${project.build.directory}/Dockerfile"
                    />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>rct</id>
      <properties>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env.BUILD_ENV</name>
          <value>${environment.name.RCT}</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy
                            file="${project.basedir}/src/main/resources/application-rct.properties"
                            tofile="${project.build.directory}/classes/application.properties"
                    />
                    <copy
                            file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-rct"
                            tofile="${project.build.directory}/Dockerfile"
                    />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <profiles>
            <profile>local</profile>
          </profiles>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <annotationProcessorPaths>
            <annotationProcessorPath>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </annotationProcessorPath>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <copy
                        file="${project.build.directory}/${project.build.finalName}.jar"
                        tofile="${project.build.directory}/${docker.image.name}.jar"
                />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${maven-docker-spotify.version}</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>${docker.image.name}</repository>
          <dockerfile>${project.build.directory}/Dockerfile</dockerfile>
          <tag>latest</tag>
          <buildArgs>
            <jarFile>${docker.image.name}.jar</jarFile>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
      <version>${project.parent.version}</version>
      <!-- To remove multiple slf4j provider and enable @slf4j annotation -->
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-to-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jul-to-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
  </dependencies>
</project>
